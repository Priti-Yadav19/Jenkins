pipeline {
  agent { label 'Jenkins-Agent' }
  tools {
    jdk 'java17'
    maven 'maven3'
  }
  environment { 
      APP_NAME = "register-app-pipeline"
      RELEASE = "1.0.0"
      DOCKER_USER = "pritiyadav1909"
      DOCKER_PASS = 'dockerhub'
      IMAGE_NAME = "${DOCKER_USER}" + "/" + "${APP_NAME}"
      IMAGE_TAG = "${RELEASE}-${BUILD_NAME}" }
  stages {
    stage("cleanup workspace") {
      steps {
        cleanWS()
      }
    }
    stage("checkout from SCM") {
      steps {
        git branch: 'main', credentialsId: 'github', url: 'https://github.com/Priti-Yadav19/Jenkins'
      }
    }
    stage("build application") {
      steps {
        sh "mvn clean package"
      }
    }
    stage("Test Application") {
      steps {
        sh "mvn test"
      }
    }
    stage("sonarqube analysis") {
      steps {
        script { 
          withSonarQubeEnv(credentialsID: 'jenkins-sonarqube-token') {
            sh "mvn sonar:sonar" 
          }
        }
      }
    }
    stage("quality Gate") {
      steps { 
         waitforQualityGate abortPipeline: false, credentialID: 'jenkins-sonarqube-token'
      }
    }
  }
  stage("Build and push docker image") {
      steps { 
        scripts { 
           docker.withRegistry('',DOCKER_PASS) {
             docker_image.push("${IMAGE_TAG}")
             docker_image.push('latest')        
           }
        }
      }
  }
}
